name: chocolatine

on:
  push:
    branches-ignore:
        - 'ga-ignore-**'
  pull_request:
    branches-ignore:
        - 'ga-ignore-**'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-FUN-400-NAN-4-1-wolfram-mathys.fillion.git"
  EXECUTABLES: "wolfram"

jobs:
  check_coding_style:
    name: check_coding_style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Check repository
        run: |
          if [ "${{ env.MIRROR_URL }}" = "${{ github.event.repository.ssh_url }}" ]
          then
          echo "${{ github.event.repository.ssh_url }} : The current and the mirror repository are the same."
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Launch check
        run: |
          check.sh $(pwd) $(pwd)
          nb_errors=`wc -l < coding-style-reports.log`
          i=1
          while [ $nb_errors -ge $i ]
          do
            severity=`cut -d ":" -f 3 coding-style-reports.log | head -n $i | tail -n 1`
            file=`cut -d ":" -f 1 coding-style-reports.log | head -n $i | tail -n 1 | sed 's/^\.\///'`
            line=`cut -d ":" -f 2 coding-style-reports.log | head -n $i | tail -n 1`
            rule=`cut -d ":" -f 4 coding-style-reports.log | head -n $i | tail -n 1`
            echo "::error title=$severity coding style error,file=$file,line=$line::$rule"
            ((i++))
          done
          if [ $nb_errors -gt 0 ]
          then
            exit 1
          fi

  check_program_compilation:
    name: check_program_compilation
    needs: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Permissions
        run: "chown -R $(id -un):$(id -gn) ~"
      - name: Run make
        timeout-minutes: 2
        run: make
      - name: Run clean
        run: make clean
      - name: Verify executables
        run: |
          for executables in $(echo "${{ env.EXECUTABLES }}" | tr ',' ' '); do
            if [ ! -x "${executables}" ]; then
             echo "Executable ${executables} doesn't exist or isn't executable."
             exit 1
            fi
          done

  run_tests:
    name: run_tests
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Permissions
        run: "chown -R $(id -un):$(id -gn) ~"
      - name: Run tests
        timeout-minutes: 2
        run: |
          mkdir -p $STACK_ROOT
          chmod 777 $STACK_ROOT
          export BUILD_DIR=$(stack path --local-install-root)
          make tests_run

  # push_to_mirror:
  #   name: push_to_mirror
  #   if: ${{ github.event_name == 'push' }}
  #   needs: run_tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.1.1
  #       with:
  #         fetch-depth: 0
  #     - name: Mirroring Repository
  #       uses: pixta-dev/repository-mirroring-action@v1.1.1
  #       with:
  #         target_repo_url:
  #           ${{ env.MIRROR_URL }}
  #         ssh_private_key:
  #           ${{ secrets.GIT_SSH_PRIVATE_KEY }}
